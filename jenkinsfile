pipeline {

    agent { label 'slave1' }


	environment {	
		DOCKERHUB_CREDENTIALS=credentials('docker_id')
	}
	
    stages {
        stage('SCM_Checkout ') {
            steps {
                echo 'Perform SCM Checkout'
                git 'https://github.com/vishakhadhoble/devops-javamvn-webapp.git'
            }
        }
        stage('Application Build') {
            steps {
                echo 'Perform Application Build'
                sh 'mvn clean package'
            }
        }
         stage('Build Docker Image') {
            steps {
				sh 'docker version'
				sh "docker build -t vishakhadhoble/vish-app:${BUILD_NUMBER} ."
				sh 'docker image list'
				sh "docker tag vishakhadhoble/vish-app:${BUILD_NUMBER} vishakhadhoble/vish-app:latest"
            }
        }
        stage('Login2DockerHub') {

			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}
		stage('Publish_to_Docker_Registry') {
			steps {
				sh "docker push vishakhadhoble/vish-app:latest"
			}
		}
		stage('Deploy to Kubernetes') {
            steps {
				script {
				sshPublisher(publishers: [sshPublisherDesc(configName: 'Kubernetes-Master', transfers: [sshTransfer(cleanRemote: false, excludes: '', execCommand: 'kubectl apply -f k8smvndeployment.yaml', execTimeout: 120000, flatten: false, makeEmptyDirs: false, noDefaultExcludes: false, patternSeparator: '[, ]+', remoteDirectory: '.', remoteDirectorySDF: false, removePrefix: '', sourceFiles: 'k8smvndeployment.yaml')], usePromotionTimestamp: false, useWorkspaceInPromotion: false, verbose: false)])
			}	
            }
		}
    }
}
